{"version":3,"sources":["Firebase.js","components/hook/UseInput.js","components/FindData.js","components/SocialSign.js","components/Sign.js","components/Auth.js","components/Header.js","components/Home.js","components/Upload.js","components/Detail.js","components/Profile.js","components/Edit.js","components/Notice.js","App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","db","firestore","storageService","storage","UseInput","initialValue","useState","value","setValue","useCallback","e","target","FindData","findToggle","findAction","useinput","findPw","setFindPw","findPassword","a","preventDefault","sendPasswordResetEmail","then","window","alert","className","onSubmit","type","placeholder","required","onChange","onClick","SocialSign","provider","GoogleAuthProvider","signInWithPopup","FacebookAuthProvider","name","src","alt","class","Sign","id","setId","password","setPassword","setFIndToggle","onchangeId","onchangePw","signInWithEmailAndPassword","message","to","Auth","connect","state","receive","reducer2","props","navToggle","setNavToggle","nameLoading","setNameLoading","history","useHistory","useEffect","setTimeout","displayName","photoURL","signOut","push","Home","posts","setPosts","user","collection","onSnapshot","snapshot","postArray","docs","map","doc","data","post","i","style","order","url","height","title","text","date","profile","favorite","reducer","reducer3","setTitle","textarea","setTextarea","attchmentUrl","time","Date","year","getFullYear","month","getMonth","day","getDate","preview","setPreview","filename","setFileName","array","length","fileRef","ref","child","putString","response","getDownloadURL","content","writer","uid","fileName","add","maxLength","cacheMeasurements","contenteditable","onHeightChange","console","log","accept","multiple","files","Array","from","reader","FileReader","readAsDataURL","onload","result","copyPreview","htmlFor","document","querySelector","clientWidths","naturalWidths","favoriteBtn","setFavoriteBtn","쿼리스트링","URLSearchParams","location","search","reply","setreply","comment","setcomment","locations","get","fileNamed","setFileNamed","commentChange","setCommentChange","newComment","setNewComment","mapData","setMapdata","ok","confirm","locate","delete","storageRef","comment_content","replyrer","uids","edit_reply","btn","getAttribute","querySelectorAll","forEach","index","indexData","classList","edit_end","indexInput","remove","indexID","update","reply_delete","deleteIndex","deleteID","cookieCheck","cookie","replys","replyArray","copyMapData","undefined","imgTarget","getElementsByClassName","grid","naturalWidth","offsetWidth","dispatch","payload","filter","idx","arr","findIndex","item","checked","expiredays","today","setDate","escape","toUTCString","setCookie","com","minRows","Profile","file","setFile","NameEdit","setNameEdit","uploadCheck","setUploadCheck","setDeleteProfile","setpreview","profileUrl","userDelete","currentUser","theFile","onloadend","finished","currentTarget","updateProfile","width","prompt","set","상태","credential","EmailAuthProvider","email","reauthenticateWithCredential","locationEdit","saveImage","setSaveImage","keep","setKeep","copySaveImage","Notice","noticeData","goName","init","setInit","Login","setLogin","userObj","setUserObj","onAuthStateChanged","payload2","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","defaults","displayNames","store","createStore","combineReducers","action","action2","names","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.14b600cb.chunk.js","sourcesContent":["import firebase from \"firebase/app\"\nimport \"firebase/auth\"\nimport \"firebase/firestore\"\nimport \"firebase/storage\"\n\nvar firebaseConfig = {\n    apiKey: \"AIzaSyAP2TAqJ-DoLN9i1Ox41Ca7BMYajRrxyAg\",\n    authDomain: \"retry-b4e10.firebaseapp.com\",\n    projectId: \"retry-b4e10\",\n    storageBucket: \"retry-b4e10.appspot.com\",\n    messagingSenderId: \"533017721875\",\n    appId: \"1:533017721875:web:b43d2a33f845c162de53e6\"\n  };\n  // Initialize Firebase\n  firebase.initializeApp(firebaseConfig);\n\n  export const firebaseInstance = firebase;\n  export const authService = firebase.auth();\n  export const db = firebase.firestore();\n  export const storageService = firebase.storage();\n","import { useState, useCallback } from \"react\";\r\n\r\nconst UseInput = (initialValue) => {\r\n  //initialValue = onChange={setState}가 파라미터로 들어옴\r\n  const [value, setValue] = useState(initialValue);\r\n  //그대로 공용으로 사용 할 state (value)에 저장\r\n\r\n  //핸들러 실행\r\n  const handler = useCallback((e) => {\r\n    setValue(e.target.value);\r\n  }, []);\r\n  return [value, handler];\r\n  //결과를 리턴해줌\r\n};\r\n\r\nexport default UseInput;\r\n","import React, { useCallback } from 'react'\r\nimport useinput from \"./hook/UseInput\";\r\nfunction FindData({findToggle,findAction,authService}) {\r\n    let [findPw, setFindPw] = useinput(\"\");\r\n\r\n    const findPassword = useCallback((e)=>{\r\n        setFindPw(e.target.value)\r\n      },[setFindPw])\r\n\r\n      async function resetpw(e) {\r\n        e.preventDefault();\r\n        if (findPw !== \"\") {\r\n          authService.sendPasswordResetEmail(findPw).then(() => {\r\n            window.alert(\"입력하신 메일로 비밀번호 안내드렸습니다.\");\r\n          });\r\n        }\r\n      }\r\n\r\n  return (\r\n    <section className=\"find\">\r\n    <div className=\"find_wrap\">\r\n      <p>비밀번호를 잊어 버리셨나요?</p>\r\n      <form className=\"find-form\" onSubmit={resetpw}>\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          placeholder=\"이메일을 입력하세요.\"\r\n          required\r\n          value={findPw}\r\n          onChange={findPassword}\r\n        />\r\n        <div className=\"btn_wrap\">\r\n          <div\r\n            className=\"btn\"\r\n            onClick={() => {\r\n              findAction(!findToggle)\r\n            }}\r\n          >\r\n            취소\r\n          </div>\r\n          <button className=\"btn\">완료</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </section>\r\n  )\r\n}\r\n\r\nexport default FindData","import React from 'react'\r\nimport {  firebaseInstance } from \"../Firebase\";\r\nfunction SocialSign({authService}) {\r\n    let provider;\r\n    async function onGoogle() {\r\n        provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n        //데이터 받기 \r\n        await authService.signInWithPopup(provider)\r\n        // await 후 authService에서 받은 데이터 조회\r\n      }\r\n\r\n      async function onFacebook() {\r\n        provider = new firebaseInstance.auth.FacebookAuthProvider();\r\n        //데이터 받기 \r\n        await authService.signInWithPopup(provider);\r\n        // await 후 authService에서 받은 데이터 조회\r\n      }\r\n\r\n  return (\r\n    <div className=\"sns_sign\">\r\n    <button className=\"sns-btn\" name=\"google\" onClick={onGoogle}>\r\n      <img src=\"./img/google.svg\" alt=\"\" />\r\n      <figcaption class=\"btn_title\">구글로 시작하기</figcaption>\r\n    </button>\r\n    <button className=\"sns-btn\" name=\"facebook\" onClick={onFacebook}>\r\n      <img src=\"./img/facebook.svg\" alt=\"\" />\r\n      <figcaption className=\"btn_title\">페이스북으로 시작하기</figcaption>\r\n    </button>\r\n  </div>\r\n  )\r\n}\r\n\r\nexport default SocialSign","import React, { useCallback, useState } from \"react\";\nimport { authService } from \"../Firebase\";\nimport { Link } from \"react-router-dom\";\nimport \"../asset/Sign.scss\";\nimport useinput from \"./hook/UseInput\";\nimport FindData from \"./FindData\";\nimport SocialSign from \"./SocialSign\";\nfunction Sign() {\n  const [id, setId] = useinput(\"\");\n  const [password, setPassword] = useinput(\"\");\n  const [findToggle, setFIndToggle] = useState(false);\n\n  const onchangeId = useCallback((e) => {\n    setId(e);\n   },[setId]\n  );\n\n  const onchangePw = useCallback((e) => {\n      setPassword(e);\n    },[setPassword]\n  );\n\n  //리액트의 on 구분은 event 파라미터를 안넣줘도 자동적으로 붙음 \n\n  async function LoginLogic(e) {\n    e.preventDefault();\n    try {\n      await authService.signInWithEmailAndPassword(id, password);\n      //관습\n    } catch (error) {\n      if (\n        error.message ===\n        \"The password is invalid or the user does not have a password.\"\n      ) {\n        window.alert(\"암호가 잘못되었거나 사용자에게 암호가 없습니다.\");\n      } else if (\n        error.message ===\n        \"There is no user record corresponding to this identifier. The user may have been deleted.\"\n      ) {\n        window.alert(\"이메일이 존재하지않거나, 삭제된 이메일입니다.\");\n      } else if (\n        error.message ===\n        \"Access to this account has been temporarily disabled due to many failed login attempts. You can immediately restore it by resetting your password or you can try again later.\"\n      ) {\n        window.alert(\n          \"로그인 시도 실패로 인해 이 계정에 대한 액세스가 일시적으로 비활성화되었습니다. 암호를 재설정하여 즉시 복원하거나 나중에 다시 시도할 수 있습니다.\"\n        );\n      } else {\n        window.alert(error.message);\n      }\n    }\n  }\n\n  function findAction(findToggle){\n    setFIndToggle(findToggle)\n  }\n\n  return (\n    <>\n      <div className=\"sign_wrap\">\n        <h1 className=\"logo\">\n          <img src=\"./img/logo.svg\" alt=\"\" />\n          <figcaption className=\"logo_title\">J.log</figcaption>\n        </h1>\n        <form onSubmit={LoginLogic} className=\"sign-form\">\n          <input\n            type=\"text\"\n            class=\"form-control\"\n            name=\"id\"\n            placeholder=\"아이디\"\n            required\n            value={id}\n            onChange={onchangeId}\n          />\n          <input\n            type=\"password\"\n            className=\"form-control\"\n            name=\"password\"\n            placeholder=\"비밀번호\"\n            required\n            value={password}\n            onChange={onchangePw}\n          />\n          <button className=\"btn\">로그인</button>\n        </form>\n        <SocialSign authService={authService} />\n        <div className=\"assistance\">\n          <button\n            className=\"pw_reset ass_btn\"\n            onClick={() => {setFIndToggle(!findToggle)}}>\n            비밀번호 변경&amp;찾기\n          </button>\n          <button className=\"ass_auth ass_btn\">\n            <Link to=\"/Auth\">회원가입</Link>\n          </button>\n        </div>\n      </div>\n      {findToggle ? <FindData findToggle={findToggle} findAction={findAction} authService={authService}/> : null}\n    </>\n  );\n}\n\nexport default Sign;\n","import React, { useEffect, useState } from \"react\";\nimport \"../asset/auth.scss\";\nimport { authService, db } from \"../Firebase\";\nimport { Link, useHistory } from \"react-router-dom\";\n\nfunction Auth() {\n  return (\n    <div></div>\n  )\n}\n\nexport default Auth;\n","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux';\nimport {Link, useHistory} from 'react-router-dom';\nimport { authService } from '../Firebase';\nfunction Header(props) {\n    let [navToggle,setNavToggle] = useState(false)\n    let [nameLoading,setNameLoading] = useState(false)\n    const history = useHistory();\n    function logout(){\n        authService.signOut();\n        history.push(\"/\")\n    }\n\n    useEffect(()=>{\n        setTimeout(() => {\n            setNameLoading(true)\n        },1000);\n    },[])\n    \n    return (\n        <>\n            <header>\n                {\n                    nameLoading ? (\n                        <>\n                        <p className=\"title\"><Link to=\"/\">{props.receive[0].displayName}.log</Link></p> \n                        <div className=\"menu\" onClick={()=>{\n                            setNavToggle(!navToggle)\n                        }}>\n                        <img src={props.receive[0].photoURL} alt=\"\" className=\"profile\"/>\n                        <img src=\"./img/arrow.svg\" alt=\"\" className=\"arrow\"/>\n                        </div>\n                        </>\n                    )\n                    \n                    : \"로그인정보를 가져오는중...\"\n                }\n            </header>\n            {\n                navToggle ? (\n                    <>\n                    <ul className=\"sub_menu\">\n                    <li><Link to=\"/profile\">설정</Link></li>\n                    <li><Link to=\"notice\">공지사항</Link></li>\n                    <li onClick={logout}>로그아웃</li>\n                    </ul> \n                    </>\n                ) : null\n            }     \n        </>\n    )\n}\n\nfunction name받기(state){\n    return {\n        receive : state.reducer2\n    }\n}\n\nexport default connect(name받기)(Header);\n","import React, { useEffect, useState } from 'react'\nimport { Link,useHistory } from 'react-router-dom';\nimport { db } from '../Firebase';\nimport \"../asset/home.scss\"\nimport \"../asset/header.scss\"\nimport Header from './Header';\nfunction Home(props) {\n  const history = useHistory();\n  let [posts,setPosts] = useState([])\n  let user =props.user\n  let order;\n\n  useEffect(()=>{\n    db.collection(\"post\").onSnapshot((snapshot)=>{\n      let postArray = snapshot.docs.map((doc)=>({\n        ...doc.data(),\n        id :doc.id\n      }))\n      setPosts(postArray)\n    })\n  },[])\n\n    return (\n      <div className=\"main\">\n        <div className=\"in_wrap\">\n            <Header/>\n            <section className=\"post_section\">\n              {\n                posts.map(function(post,i){\n                  return <>\n                  <Link to={`/detail?id=${post.id}`} style={order = {\n                    order : post.order\n                  }}>\n                  <div className=\"post\">\n                    <figure className=\"thumbnail\">\n                      {\n                        post.url === \"\" ? <img src=\"./img/no-image.jpg\" alt=\"\" height=\"200px\"/> : <img src={post.url[0]} alt=\"\"/>\n                      }\n                    </figure>\n                    <div className=\"text_wrap\">\n                      <p className=\"post_title\">{post.title}</p>\n                      <p className=\"post_text\">{post.text}</p>\n                      <p className=\"post_date\">{post.date}</p>\n                    </div>\n                    <div className=\"writer_wrap\">\n                      <div className=\"id\">\n                        <img src={post.profile} alt=\"\" className=\"profile\"/>\n                        <p className=\"profile_id\">{post.user}</p>\n                      </div>\n                      <p className=\"favorite\">❤{post.favorite}</p> \n                    </div>\n                  </div>\n                  </Link>\n                  </>\n                })\n              }\n            </section>\n            <button className=\"new-post\">\n              <Link to=\"/upload\"><img src=\"./img/add.svg\" alt=\"\"/></Link></button>\n        </div>\n        </div>\n    )\n}\n\nexport default Home;\n\n","import React, { useEffect, useState } from 'react'\nimport \"../asset/upload.scss\"\nimport { useHistory } from 'react-router-dom';\nimport { db, storageService } from '../Firebase';\nimport { connect } from 'react-redux'\nimport TextareaAutosize from 'react-textarea-autosize';\nfunction Upload(props) {\n    let [title,setTitle] = useState(\"\")\n    let [posts,setPosts] = useState([])\n    let [textarea,setTextarea] =  useState(\"\");\n    let user = props.user\n    let attchmentUrl =[];\n    let time = new Date();\n    let year = time.getFullYear();\n    let month = time.getMonth()+1;\n    let day = time.getDate();\n    const history = useHistory();\n    let max = 10000\n    let [preview,setPreview] = useState([])\n    let [filename,setFileName] = useState([])\n    let array = []\n\n    useEffect(()=>{\n    db.collection(\"post\").onSnapshot((snapshot)=>{\n      let postArray = snapshot.docs.map((doc)=>({\n        ...doc.data()\n      }))\n      setPosts(postArray)\n    })\n  },[])\n\n    function onFileChange(e){\n    let files = Array.from(e.target.files)\n    setFileName(files)\n    for(var i =0; i < files.length; i++){\n          const reader = new FileReader();\n      if(files){\n        reader.readAsDataURL(files[i])\n      }\n\n      reader.onload = async e =>{\n        array.push(e.target.result)\n        let copyPreview = [...preview]\n        await copyPreview.push(...array);\n        setPreview(copyPreview)\n      }\n    }\n    }\n    \n    async function post(e){\n        e.preventDefault();\n        if(preview.length !== 0 ){\n            for(var i=0; i<preview.length; i++){\n                const fileRef = storageService.ref().child(`${user.displayName}/${filename[i].name}`)\n                const response = await fileRef.putString(preview[i],\"data_url\");\n                attchmentUrl.push(await response.ref.getDownloadURL());\n            }\n        } \n\n        const content = {\n            title : title,\n            text: textarea,\n            user :user.displayName,\n            writer : user.uid,\n            date: `${year}년${month}월${day}일`,\n            url : attchmentUrl.length === 0 ? \"\" : attchmentUrl,\n            favorite : 0,\n            profile : user.photoURL,\n            fileName : filename.length === 0 ? \"\" : filename.map(function(a,i){\n              return filename[i].name\n            }),\n            order : max-posts.length-1\n        }\n        await db.collection(\"post\").add(content).then(()=>{\n            window.alert(\"포스트가 업로드 되었습니다.\")\n            history.push(\"/\")\n        })\n    }\n\n    function reset(){\n        document.querySelector(\"#title\").value=\"\";\n        document.querySelector(\".text\").value=\"\";\n        document.querySelector(\".file-form\").value=null;\n        setTimeout(() => {\n            setPreview(null)\n        }, 1000);\n    }\n\n    return (\n        <div className=\"upload\">\n            <form onSubmit={post}>\n                <input type=\"text\" className=\"form-control titlearea\" id=\"title\" placeholder=\"제목을 입력하세요.\" maxLength={120} onChange={e=>setTitle(e.target.value)}/>\n                <div className=\"textarea\">\n                    <TextareaAutosize\n                    cacheMeasurements\n                    contenteditable=\"true\"\n                    onHeightChange={(height) => console.log(height)}\n                    className=\"text\"\n                    placeholder=\"당신의 이야기를 적어보세요.\"\n                    onChange={e=>setTextarea(e.target.value)}\n                    />\n                    <figure>\n                      {\n                        preview && preview.map(function(url,i){\n                          return <img src={url} alt=\"\" className=\"att\" key={i}></img>\n                        })\n                      }\n                    </figure>\n                </div>\n                <input type=\"file\" accept=\"image/*\" multiple className=\"file-form\" id=\"image\" onChange={onFileChange}/>\n                <label htmlFor=\"image\" className=\"Attachment image-att\">이미지를 담아주세요</label>\n                <p className=\"warnning\">※ 이미지를 한번에 업로드 해주세요. (하나씩X)</p>\n                <div className=\"bottom_wrap\">\n                <div className=\"exit\" onClick={()=>{\n                    history.push(\"/\")\n                }}>← &nbsp;나가기</div>\n            <div className=\"cancel_wrap\">\n                {\n                  title !== \"\" && textarea !== \"\" ? <button type=\"submit\" className=\"post\" onClick={reset}>글작성</button> : <div className='none_text post' onClick={()=>{\n                    window.alert(\"제목과 내용을 다 입력하셨는지 확인해주세요\")\n                  }}>글작성</div> \n                }\n            </div>\n            </div>\n            </form>\n        </div>\n    )\n}\n\nfunction 게시글갯수공장(state){\n  return{\n    reducer:state.reducer3\n  }\n}\n\nexport default connect(게시글갯수공장)(Upload);\n\n","import React, { useEffect, useState } from 'react'\nimport { db, storageService } from '../Firebase'\nimport \"../asset/detail.scss\"\nimport { useHistory } from 'react-router-dom'\nimport Header from './Header'\nimport { connect } from 'react-redux'\nimport TextareaAutosize from 'react-textarea-autosize';\nfunction Detail(props) {\n  let [posts,setPosts] = useState([])\n  let [favoriteBtn,setFavoriteBtn] = useState(false)\n  let 쿼리스트링 = new URLSearchParams(window.location.search)\n  let [reply,setreply] = useState([])\n  let [comment,setcomment] = useState(\"\")\n  const history = useHistory();\n  let user = props.user\n  var uid = user.displayName\n  let time = new Date();\n  let year = time.getFullYear();\n  let month = time.getMonth()+1;\n  let day = time.getDate();\n  let locations = 쿼리스트링.get(\"id\")\n  let [fileNamed,setFileNamed] = useState(\"\")\n  let [commentChange,setCommentChange] = useState(false)\n  let [newComment,setNewComment] = useState(\"\")\n  let [mapData,setMapdata] = useState([])\n  let clientWidths;\n  let naturalWidths;\n  let [imgLazy,setImgLazy] = useState(false)\n\n  function setCookie(name,value,expiredays){\n    let today = new Date();\n    today.setDate(today.getDate() + expiredays);\n    document.cookie =  `${name} = ${escape(value)}; expires =${today.toUTCString()};`\n  }\n\n  useEffect(()=>{\n    db.collection(\"post\").doc(쿼리스트링.get(\"id\")).onSnapshot((snapshot)=>{\n      let postArray = ({...snapshot.data()})\n      setPosts(postArray)\n    })\n      let cookieCheck = document.cookie\n      if(cookieCheck === \"Cookie=done\"){\n        setFavoriteBtn(true)\n    } else {\n        setFavoriteBtn(false)\n    }\n\n    db.collection(\"post\").doc(쿼리스트링.get(\"id\")).collection(\"reply\").onSnapshot((replys)=>{\n      let replyArray = replys.docs.map((doc)=>({\n        ...doc.data(),\n        id: doc.id\n      }))\n      setreply(replyArray)\n    })\n  },[])\n\n  useEffect(()=>{\n    setFileNamed(posts.fileName)\n    let copyMapData = [...mapData]\n    if(posts.url !== undefined) {\n      copyMapData.push(...posts.url) \n     }\n    setMapdata(copyMapData)\n  },[posts])\n\n  useEffect(()=>{\n    setTimeout(() => {\n      let imgTarget = Array.from(document.getElementsByClassName(\"att\"))\n      let grid = document.getElementsByClassName(\"grid\")\n      imgTarget.map(function(a,i){\n        naturalWidths = document.getElementsByClassName(\"att\")[i].naturalWidth\n        clientWidths  = document.getElementsByClassName(\"att\")[i].offsetWidth\n        if (naturalWidths < clientWidths){\n            imgTarget[i].classList.add(\"natural-size\")\n        } else {\n          imgTarget[i].classList.add(\"full-size\")\n      }   \n      })\n      if(imgTarget.length > 1){\n        grid[0].classList.add(\"grids\")\n      }\n    },500);\n  },[])\n  \n  async function onDelete(e){\n    e.preventDefault();\n    const ok = window.confirm(\"정말 삭제 하시겠습니까?\");\n    let locate = db.collection(\"post\").doc(쿼리스트링.get(\"id\"))\n    if(ok){\n      reply.map(function(a,i){\n        locate.collection(\"reply\").doc(reply[i].id).delete();\n      })\n      await locate.delete().then(()=>{\n        history.push(\"/\")\n      });\n      let storageRef = storageService.ref();\n      if(fileNamed !== \"\"){\n        fileNamed.map(function(a,i){\n        let imagesRef = storageRef.child(`${posts.user}/${fileNamed[i]}`)\n        imagesRef.delete()\n      })\n      }\n    }\n  }\n\n  async function commentUpload(e){\n    e.preventDefault();\n    var comment_content = {\n          replyrer : uid,\n          comment : comment,\n          date: `${year}년${month}월${day}일`,\n          profile : user.photoURL,\n          uids : user.uid\n    };\n    if(comment_content.comment === \"\"){\n            window.alert(\"댓글을 입력해주세요\")\n    } else {\n    await db.collection(\"post\").doc(locations).collection(\"reply\").add(comment_content).then(()=>{\n      window.alert(\"댓글을 달았습니다.\")\n      document.querySelector(\".comment_input\").value=\"\"\n    })\n    }\n  }\n\n  function edit_reply(e){\n    setCommentChange(true)\n    let btn = e.target.getAttribute(\"data-index\")\n    let tests = Array.from(document.querySelectorAll(\".reply_text\"))\n    tests.forEach((index)=>{\n      var indexData = index.getAttribute(\"data-index\")\n      if(btn === indexData){\n        document.querySelector(`.reply_text${indexData}`).classList.add(\"none\")\n        document.querySelector(`.reply_input${indexData}`).classList.add(\"block\")\n      }\n    })\n  }\n\n    function edit_end(e){\n    setCommentChange(false)\n    let btn = e.target.getAttribute(\"data-index\")\n    let inputs = Array.from(document.querySelectorAll(\".reply_input\"))\n    inputs.map(function(a,i){\n      var indexInput = a.getAttribute(\"data-index\")\n      if(btn === indexInput){\n        document.querySelector(`.reply_text${i}`).classList.remove(\"none\")\n        document.querySelector(`.reply_input${i}`).classList.remove(\"block\")\n        var indexID = document.querySelector(`.reply_input${i}`).getAttribute(\"data-id\")\n        db.collection(\"post\").doc(locations).collection(\"reply\").doc(indexID).update({comment:newComment})\n      }\n    })\n  }\n\n  function reply_delete(e){\n    let btn = e.target.getAttribute(\"data-index\")\n    let deletes = Array.from(document.querySelectorAll(\".reply_text\"))\n    deletes.map(function(a,i){\n      var deleteIndex = a.getAttribute(\"data-index\")\n      if(btn === deleteIndex){\n        var deleteID = document.querySelector(`.reply_text${i}`).getAttribute(\"data-id\")\n        const ok = window.confirm(\"정말 삭제 하시겠습니까?\");\n        if(ok){\n          db.collection(\"post\").doc(locations).collection(\"reply\").doc(deleteID).delete();\n        }\n      }\n    })\n  }\n\n    return (\n            <div className=\"detail_wrap\">\n              <Header/>\n              <div className=\"in_wrap\">\n                <section className=\"sub_header\">\n                    <h1>{posts.title}</h1>\n                    <div className=\"writer_wrap\">\n                        <div className=\"left_wrap\">\n                          <img src={posts.profile} alt=\"\" className=\"profile\"/>\n                            <p className=\"writer\">{posts.user}</p>\n                            <p className=\"date\">{posts.date}</p>\n                        </div>\n                        {\n                          user.uid === posts.writer || user.uid === \"Qzq3BAJaw5doQk1Xjbvvu376iRn1\" ? (\n                            <>\n                            <div className=\"right_wrap\">\n                            <button className=\"edit\" onClick={()=>{\n                              props.dispatch({type:\"쿼리스트링보내기\",payload:locations})\n                              history.push(\"/edit\")\n                            }}>수정</button>\n                            <button className=\"delete\" onClick={onDelete}>삭제</button>\n                            </div>\n                            </>\n                          ) : null\n                        } \n                    </div>\n                </section>\n                <section className=\"content_wrap\">\n                  <pre className=\"text\">{posts.text}</pre>\n                  <div className='grid'>\n                  { mapData.filter((value,idx,arr)=>{\n                      return(\n                        arr.findIndex((item)=> item === value\n                        ) === idx\n                      )\n                    })\n                    .map(function(url,i){\n                      return <img src={url} className=\"att\" alt=\"\" key={i}/>\n                    })\n                    \n                  }\n                  </div>\n                    <div className=\"comment\">\n                      <div className=\"favorite_wrap\">\n                        <p className=\"com_title\">게시글에 대한 댓글을 달아주세요.</p>\n                        <input type=\"checkbox\" id=\"favorite_check\" onClick={e=>{\n                        if(e.target.checked){\n                          db.collection(\"post\").doc(쿼리스트링.get(\"id\")).update({\n                          favorite:posts.favorite+1\n                        }).then(()=>{\n                        setCookie(\"Cookie\",\"done\",1)\n                        setFavoriteBtn(true)\n                        })\n                        } \n                      }}/>\n                      {\n                        favoriteBtn !==  true ? (\n                          <>\n                          <label htmlFor=\"favorite_check\" className=\"favorite_btn\"><span>👍</span>추천&nbsp;{posts.favorite}</label> \n                          </>\n                        ): <div className=\"favorite_btn\"><span>👍</span>추천&nbsp;{posts.favorite}</div>\n                      }\n                      </div>\n                        {\n                          reply.map(function(com,i){\n                            return <>\n                            <div className=\"reply_wrap\">\n                            <div className=\"user_info\">\n                            <img src={com.profile} alt=\"\"/>\n                            <div className=\"user_text\">\n                            <p className=\"reply_name\">{com.replyrer}</p>\n                            <p className=\"reply_date\">{com.date}</p>\n                            </div>\n                            {\n                              user.uid === com.uids ? (\n                                <>\n                                <div className=\"edit_comment\">\n                                  {\n                                    commentChange === false ? (\n                                      <>\n                                      <div className=\"edit btns\" data-index={i} onClick={edit_reply}>수정</div>\n                                      </>\n                                    ) : <div className=\"edit btns\" data-index={i} onClick={edit_end}>완료</div>\n                                  }\n                                  <div className=\"delete btns\" data-index={i} onClick={reply_delete}>삭제</div>\n                                </div>\n                                </>\n                              ) : null\n                            }\n                            </div>\n                              <p className={`reply_text reply_text${i}`} data-id={com.id} data-index={i}>{com.comment}</p>\n                              <input type=\"text\" className={`reply_input reply_input${i} form-control`} placeholder={com.comment}\n                                data-index={i} data-id={com.id} onChange={e=>setNewComment(e.target.value)}/>\n                            </div>\n                            </>\n                          })\n                        }\n                      <form onSubmit={commentUpload}>\n                      <TextareaAutosize\n                      cacheMeasurements\n                      onHeightChange={(height) => (\"\")}\n                      minRows={4}\n                      className=\"comment_input\"\n                      onChange={e=>setcomment(e.target.value)}\n                    />\n                      <button className=\"btn\">댓글 작성</button>\n                      </form>\n                    </div>\n                </section>\n                </div>\n            </div>  \n    )\n}\n\nfunction location공장(state){\n  return{\n    reducer:state.reducer\n  }\n}\n\nexport default connect(location공장)(Detail);\n","import React, { useEffect, useState } from 'react'\nimport \"../asset/profile.scss\"\nimport { authService, db, firebaseInstance, storageService } from '../Firebase';\nimport { useHistory } from 'react-router-dom';\nimport Header from './Header';\nimport \"../asset/header.scss\"\n\nfunction Profile(props) {\n    let user = props.user\n    let [file,setFile] = useState(\"\");\n    let [title,setTitle] = useState(\"\")\n    let [fileName,setFileName] = useState(\"\")\n    let [NameEdit,setNameEdit] = useState(false)\n    let [uploadCheck,setUploadCheck] = useState(false)\n    let [deleteProfile,setDeleteProfile] = useState(\"\")\n    let [preview,setpreview] = useState(false)\n    let profileUrl= \"\";\n    let userDelete = authService.currentUser\n    const history = useHistory();\n\n    useEffect(()=>{\n        setTitle(user.displayName)\n        setDeleteProfile(user.photoURL)\n    },[])\n\n    async function onFileChange(e){\n        setpreview(true)\n        setUploadCheck(true)\n        const theFile = e.target.files[0];\n        setFileName(theFile)\n        const reader = new FileReader();\n        reader.onloadend = (finished) => {\n            const {\n                currentTarget : {result},\n            } = finished\n\n            setFile(result)\n            }\n            reader.readAsDataURL(theFile)\n    }\n\n    async function NameF(){\n        setNameEdit(!NameEdit)\n        await user.updateProfile({displayName : title}).then(()=>{\n            setNameEdit(!NameEdit)\n            window.alert(\"닉네임이 변경되었습니다\")\n            history.push(\"/\")\n        })\n    }\n\n    async function uploadEnd(){\n        const fileRef = storageService.ref().child(`${title}-profileImg/${fileName.name}`)\n        const response = await fileRef.putString(file,\"data_url\");\n        profileUrl = await response.ref.getDownloadURL();\n        \n        await user.updateProfile({photoURL : profileUrl,}).then(()=>{\n            setpreview(false)\n            setUploadCheck(false)\n            window.alert(\"프로필 변경이 완료되었습니다.\")\n            history.push(\"/\")\n        })    \n    }\n\n    function deleteUser(){\n        let pw = window.prompt(\"비밀번호를 입력해주세요\")\n        let password = pw\n        db.collection(\"delete\").doc(`${user.displayName}`).set({상태 : \"탈퇴\"})\n        const credential = firebaseInstance.auth.EmailAuthProvider.credential(user.email,password)\n        userDelete.reauthenticateWithCredential(credential).then(()=>{\n            userDelete.delete().then(()=>{\n                window.alert(\"회원탈퇴 되었습니다.\")\n                authService.signOut();\n                history.push(\"/\")\n            })\n        })\n    }\n\n\n    return (\n        <div className=\"profile_wrap\">\n            <Header/>\n            <section className=\"content\">\n                <div className=\"profile_area\">\n                    <div className=\"img_wrap\">\n                        <input type=\"file\" accept=\"image/*\" id=\"img_check\" onChange={onFileChange}/>\n                        <figure className=\"profileImg\">\n                            {\n                                preview ? <img src={file} width=\"130px\" height=\"135px\"/> : <img src={user.photoURL} width=\"130px\" height=\"135px\"/>\n                            }\n                        </figure>\n                            {\n                                uploadCheck ? <div className=\"uploads btn\" onClick={uploadEnd}>바꾸기 완료</div> : <label htmlFor=\"img_check\" className=\"uploads btn\" >이미지 업로드</label>\n                            }\n                    </div>\n                    <div className=\"name_area\">\n                        {\n                            NameEdit ? <input type=\"text\" value={title} className=\"form-control\" onChange={e=>setTitle(e.target.value)}/> : <b className=\"nickname\">{user.displayName}</b>\n                        }\n                        {\n                             NameEdit ? <button className=\"btn comment_btn\" onClick={NameF}>수정완료</button> : <button className=\"btn comment_btn\" onClick={()=>{\n                                setNameEdit(true)\n                            }}>닉네임 수정</button>\n                        }\n                    </div>\n                </div>\n                <div className=\"suggest\">\n                    <p className=\"suggest_title\">문의사항</p>\n                    <p className=\"director_email\">rlawlgh388@naver.com</p>\n                </div>\n                <div className=\"withdrawal\">\n                    <div className=\"delete_wrap\">\n                        <p className=\"withdrawal_title\">회원 탈퇴</p>\n                        <button className=\"btn\" onClick={deleteUser}>회원 탈퇴</button>\n                    </div>\n                    <p className=\"explan\">탈퇴 시 작성한 포스트 및 댓글이 모두 삭제되며 복구되지 않습니다.</p>\n                </div>\n            </section>\n        </div>\n    )\n}\n\nexport default Profile\n","import React, { useEffect, useState } from 'react'\nimport \"../asset/upload.scss\"\nimport { useHistory } from 'react-router-dom';\nimport { db, storageService } from '../Firebase';\nimport {connect} from \"react-redux\";\nimport TextareaAutosize from 'react-textarea-autosize';\nfunction Edit(props) {\n    let [posts,setPosts] = useState([])\n    let [title,setTitle] = useState(\"\")\n    let [textarea,setTextarea] =  useState(\"\");\n    let user = props.user\n    const history = useHistory();\n    let locationEdit = props.reducer[0]\n    let [preview,setPreview] = useState([])\n    let [filename,setFileName] = useState([])\n    let [fileNamed,setFileNamed] = useState([])\n    let [saveImage,setSaveImage] = useState([])\n    let [keep,setKeep] = useState(false)\n    let array = []\n    let attchmentUrl =[];\n\n  useEffect(()=>{\n    db.collection(\"post\").doc(`${locationEdit}`).onSnapshot((snapshot)=>{\n        let postArray = ({...snapshot.data()})\n            setPosts(postArray)\n        })\n  },[])\n\n  useEffect(()=>{\n    setTitle(posts.title)\n    setTextarea(posts.text)\n    setFileNamed(posts.fileName)\n\n    let copySaveImage = [...saveImage]\n    if(posts.url !== undefined){\n        copySaveImage.push(...posts.url)\n    }\n    setSaveImage(copySaveImage)\n\n  },[posts])\n\n    function onFileChange(e){\n        setKeep(true)\n        let files = Array.from(e.target.files)\n        setFileName(files)\n        for(var i =0; i < files.length; i++){\n            const reader = new FileReader();\n        if(files){\n            reader.readAsDataURL(files[i])\n        }\n\n        reader.onload = async e =>{\n            array.push(e.target.result)\n            let copyPreview = [...preview]\n            await copyPreview.push(...array);\n            setPreview(copyPreview)\n            }\n        }\n    }\n\n    async function post(e){\n        e.preventDefault();\n        if(preview.length !== 0 ){\n            for(var i=0; i<preview.length; i++){\n                const fileRef = storageService.ref().child(`${user.displayName}/${filename[i].name}`)\n                const response = await fileRef.putString(preview[i],\"data_url\");\n                attchmentUrl.push(await response.ref.getDownloadURL());\n            }\n        }\n\n        const content = {\n            title : title,\n            text : textarea,\n            url : keep === false ? saveImage : attchmentUrl,\n            fileName : keep === false ? fileNamed : filename.map(function(a,i){\n              return filename[i].name\n            }),\n        }\n\n        await db.doc(`post/${locationEdit}`).update(content).then(()=>{\n            if(keep === false){\n            window.alert(\"수정이 완료되었습니다.\")\n            history.push(`/detail?id=${locationEdit}`)\n            } else {\n                let storageRef = storageService.ref();\n                fileNamed.map(function(a,i){\n                    let imagesRef = storageRef.child(`${posts.user}/${fileNamed[i]}`)\n                    imagesRef.delete()\n                })\n            window.alert(\"수정이 완료되었습니다.\")\n            history.push(`/detail?id=${locationEdit}`)\n            }\n        })\n    } \n  \n    return (\n        <div className=\"upload\">\n            <form onSubmit={post}>\n                <input type=\"text\" className=\"form-control titlearea\" id=\"title\" value={title}  maxLength={120} onChange={e=>setTitle(e.target.value)}/>\n                <div className=\"textarea\">\n                    <TextareaAutosize\n                    cacheMeasurements\n                    onHeightChange={(height) => console.log(height)}\n                    className=\"text\"\n                    value={textarea} \n                    onChange={e=>setTextarea(e.target.value)}\n                    />\n                    <figure>\n                      {\n                        keep === false ? (\n                            <>\n                            {\n                                saveImage.map(function(url,i){\n                                    return <img src={url} alt=\"\" className=\"att\" key={i}></img>\n                                })\n                            }\n                            </>\n                        ) : (\n                            <>\n                            {\n                                preview.map(function(url,i){\n                                    return <img src={url} alt=\"\" className=\"att\" key={i}></img>\n                        })\n                            }\n                            </>\n                        )\n                      }\n                    </figure>\n                </div>\n                <input type=\"file\" accept=\"image/*\" multiple className=\"file-form\" id=\"image\" onChange={onFileChange}/>\n                <label htmlFor=\"image\" className=\"Attachment image-att\">이미지를 담아주세요</label>\n                <p className=\"warnning\">※ 이미지를 한번에 업로드 해주세요. (하나씩x)</p>\n                <div className=\"bottom_wrap\">\n                <div className=\"exit\" onClick={()=>{\n                   history.push(`/detail?id=${locationEdit}`)\n                }}>← &nbsp;나가기</div>\n            <div className=\"cancel_wrap\">\n                <button type=\"submit\" className=\"post\">글작성</button>\n            </div>\n            </div>\n            </form>\n        </div>\n    )\n}\n\nfunction location공장(state){\n    return{\n        reducer : state.reducer\n    }\n}\n\nexport default connect(location공장)(Edit);\n","import React from 'react'\nimport Header from './Header'\nimport \"../asset/notice.scss\"\n\nfunction Notice() {\n    let time = new Date();\n    let year = time.getFullYear();\n    let month = time.getMonth()+1;\n    let day = time.getDate();\n    const noticeData = [\n        {title:\"좋아요 기능안내\",\n        text : \"좋아요 기능은 무분별한 좋아요를 방지하고자 하루에 한번만 누를 수 있게 제작하였습니다.\"\n        },\n        {title:\"닉네임 변경 기능안내\",\n        text : \"닉네임 변경 시 이전에 작성하신 게시물들의 작성자는 바뀌지 않습니다.\"\n        },\n        {title:\"사진 업로드 기능안내\",\n        text : \"사진 용량이 많은 파일은 업로드가 느릴 수 있으니 되도록 용량이 작게 압축해서 올려주세요.\"\n        },\n        {title:\"비밀번호 변경문의 안내\",\n        text : \"비밀번호 변경은 비밀번호 찾기를 통해 이메일로 전송되는 메일을 통해 변경 하실 수 있습니다.\"\n        }\n    ]\n    return (\n        <div className=\"notice_wrap\">\n            <Header/>\n            <section className=\"post_area\">\n             {\n                 noticeData.map(function(data,i){\n                     return <>\n                        <div className={`in_wrap in_wrap${i}`}>\n                            <div className=\"notice\">\n                                <figure><img src=\"./img/default.svg\" alt=\"\"/></figure>\n                                <div className=\"text_wrap\">\n                                <p className=\"notice_title\">{noticeData[i].title}</p>\n                                <p className=\"notice_text\">{noticeData[i].text}</p>\n                                <div className=\"tag\">\n                                <p className=\"tag_in\">공지사항</p>\n                            </div>\n                        </div>\n                      </div>\n                     </div>\n                     </>\n                 })\n             }\n            </section>\n        </div>\n    )\n}\n\nexport default Notice;\n","import React, { useEffect, useState } from 'react'\nimport {Route} from 'react-router-dom';\nimport Sign from './components/Sign';\nimport {authService} from \"./Firebase\"\nimport Auth from './components/Auth';\nimport Home from './components/Home';\nimport Upload from './components/Upload';\nimport Detail from './components/Detail';\nimport Profile from './components/Profile';\nimport Edit from './components/Edit';\nimport { connect } from 'react-redux';\nimport Notice from './components/Notice';\nfunction App(props) {\n  const [init,setInit] = useState(false);\n  const [Login,setLogin] = useState(false);\n  const [userObj,setUserObj] = useState(null)\n  useEffect(()=>{\n    authService.onAuthStateChanged((user)=>{\n      if(user) {\n        setLogin(true)\n        setUserObj(user)\n        props.dispatch({type:\"활동명\",payload2:user})\n      } else {\n        setLogin(false)\n      }\n      setInit(true)\n    })\n  },[])\n\n  return (\n    <div className=\"App\">\n      {\n        init ? (\n          Login ? (\n            <>\n            <Route exact path=\"/\">\n              <Home user={userObj}/>\n            </Route>\n            <Route exact path=\"/upload\">\n              <Upload user={userObj}/>\n            </Route>\n            <Route exact path=\"/detail\">\n              <Detail user={userObj}/>\n            </Route>\n            <Route exact path=\"/profile\">\n              <Profile user={userObj}/>\n            </Route>\n            <Route exact path=\"/edit\">\n              <Edit user={userObj}/>\n            </Route>\n            <Route exact path=\"/notice\">\n              <Notice/>\n            </Route>\n            </>\n          ) :\n          <>\n            <Route exact path=\"/\">\n              <Sign/>\n            </Route>\n            <Route exact path=\"/Auth\">\n              <Auth/>\n            </Route>\n            </>\n        ) : \"\"\n      }\n    </div>\n  );\n}\n\nfunction name보내기(state){\n  return {\n    goName : state.reducer2\n  }\n}\n\nexport default connect(name보내기)(App);","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter} from \"react-router-dom\"\nimport {Provider} from 'react-redux';\nimport {combineReducers, createStore} from \"redux\"\n\nlet defaults= [];\n\nlet displayNames = []\n\nfunction reducer(state = defaults, action){\n  if(action.type===\"쿼리스트링보내기\"){\n    let location = [...defaults]\n    location.push(action.payload)\n    return location\n  } else {\n    return state\n  }\n}\n\nfunction reducer2(state = displayNames, action2){\n  if(action2.type===\"활동명\"){\n    let names = [...displayNames]\n    names.push(action2.payload2)\n    return names\n  } else {\n    return state\n  }\n}\n\nlet store = createStore(combineReducers({reducer,reducer2}))\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n    <Provider store={store}>\n    <App />\n    </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}